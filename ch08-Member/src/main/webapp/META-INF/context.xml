<?xml version="1.0" encoding="UTF-8"?>
<Context>
	<!-- 
	auth : 컨테이너를 자원 관리자로 기술 
	maxTotal : 커넥션 풀에서 생성되는 최대 커넥션 숫자 
	maxIdle : 커넥션 풀 유지를 위해 최대 대기 커넥션 숫자
	-->
    <Resource name="jdbc/xe"
              auth="Container"
              type="javax.sql.DataSource"
              username="c##user001"
              password="1234"
              driverClassName="oracle.jdbc.OracleDriver"
              url="jdbc:oracle:thin:@localhost:1521:xe"
              maxTotal="20"
              maxIdle="10" />
</Context>
<!-- 
식별자
자원관리자(얘가 커넥션 만들어줌)
만들어낸 객체
담는 정보
최종적인 커넥션 개체생성
maxTotal : 커넥션 풀에서 생성되는 최대 커넥션 숫자 (20) -> 서버의 성능과 관계가 있다.
maxIdle : 커넥션 풀 유지를 위해 최대 대기 커넥션 숫자 (10)

커넥션 풀? 
db연동시 커넥션 만든다(안만들면 못쓴다)
커넥션 객체 생성 
처음부터 만들고 시작
이용자(요청-데이터달라고) -> 다수유저 db연동 -> 커넥션 많아짐
-> 메모리 부하(프로그램 속도저하) -> 개발자 안정적인 db연동 원함
-> 소멸(가비지컬렉터) 개념은 아니고 빌려준다
(이상) 적은 커넥션으로 돌리자 <-> (현실) 보따리 만들어서 그거 돌려쓰기(카드 돌려막기네)

ex) 빵장사를 하는데
(이상) 손님수만큼만 만들어서 팔면 재고 안남기고 파는거 (손님 많이지면 그때 구우면 오븐 터짐)
(현실) 몇명 올지 모르니 평균 매출 +-오차범위내로 만든다 남으면 냉장고

요즘은 톰캣에 내장되어있음(설정은 해줘야됨)
 -->